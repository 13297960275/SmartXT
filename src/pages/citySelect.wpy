<style lang="less">
	.dw{
   position: absolute;
   top:0;
   right: 0;
   width:100px;
   height: 100%;
 }
 .wxSortPickerViewTag{
   background-color: #f1f1f1;
   font-size: 16px;
   font-weight: bold;
   color: #999999;
   line-height: 30px;
   height: 30px;
   padding: 0 15px;
 }
 .wxSortPickerViewItem{
   height: 40px;
   line-height: 40px;
   border-bottom: 1px solid #eee;
   margin-left: 15px;
   color: #444;
 }
 .hot{
  padding: 8px 10px;
  background-color:#EFEFF4;
}
.hor{
 font-size: 14px;
 color: #999999;
 font-weight: 500;
 display: block;
 padding: 0 25px 5px 0px;
}
.kuai{
 height: 30px;
 width: 20%;
 text-align: center;
 line-height: 30px;
 color: #444;
 font-weight: 400;
 display: inline-block;
 margin: 5px;
 background: #fff;
 border: 1px solid #eee;
 border-radius: 2px;
}
.searchLetter{
 position: fixed;
 right: 0;
 width: 24px;
 height: 80%;
 text-align: center;
 justify-content: center;
 display: flex;
 flex-direction: column;
 color: #666;
 z-index: 1
}
.touchClass{
 margin-top: 1px;
 right: 0;
 background-color: #fff;
 color: #1296db;
 font-weight: 700;
}
.letterScroll{
  margin-top:0px;
  font-size:12px;
}
.showSlectedLetter{
 background-color: rgba(0, 0, 0,0.5);
 color: #fff;
 display: flex;
 justify-content: center;
 align-items: center;
 position: fixed;
 top:50%;
 left: 50%;
 margin: -50px;
 width: 100px;
 height: 100px;
 border-radius:10px;
 font-size: 26px;
 z-index: 1;
}
.selection{
 display: flex;
 width: 100%;
 flex-direction: column;
}
.item_letter{
 display: flex;
 background-color: #f8f8f8;
 height: 30px;
 padding-left: 10px;
 align-items: center;
}
.item_city{
 display: flex;
 background-color: #fff;
 height: 40px;
 padding-left: 10px;
 align-items: center;
 border-bottom: 1px solid #f8f8f8
}
.gps{
 position: relative;
 height: 30px;
 border-bottom: 1px solid #ccc;
 border-top: 1px solid #ccc;
 line-height: 30px;
 padding-left: 15px;
 font-size: 16px;
}
.gpsif {
 margin-left: 6px;
 font-size: 14px;
 color: #ccc;
}
.searchinput {
  position: relative;
  height: 38px;
  border: 1px solid #ccc;
  line-height: 38px;
  font-size: 16px;
  width: 75%;
  border-redius: 15%;
  line-height: 38px;
}

</style>
<template>
  <view class="weui-search-bar">
    <view class="weui-search-bar__form">
      <view class="weui-search-bar__box">
        <icon class="weui-icon-search_in-box" type="search" size="14"></icon>
        <input type="text" class="weui-search-bar__input" placeholder="输入城市名称或拼音查询" value="{{ inputVal }}" bindinput="inputTyping" focus/>
        <view class="weui-icon-clear" bindtap="clearInput">
          <icon type="clear" size="14"></icon>
        </view>
      </view>
    </view>
  </view>
  <view class="weui-cells searchbar-result" style="margin-top:0;" wx:if="{{ !!inputVal && !!searchRes.length }}">
    <view class="weui-cell" hover-class="weui-cell_active" wx:for="{{ searchRes }}" wx:key="index" bindtap="wxSortPickerViewItemTap" data-text="{{item.city}}">{{item.city}}</view>
  </view>
  <view class="gps">
    {{city}} <text class="gpsif">GPS定位</text>
    <!-- <view class="dw" catchtap ="cxgps">
      <image style="width: 30px; height: 30px;position: absolute;top: 50%;left:40px;margin-top: -15px " src="{{src}}"></image>
    </view> -->
  </view>

  <block wx:if="{{isShowLetter}}">
    <view class="showSlectedLetter">
     {{showLetter}}
   </view>
 </block>
 <view class="searchLetter touchClass" >
  <view class="letterScroll" catchtouchstart="searchStart" catchtouchmove="searchMove" catchtouchend="searchEnd">
    <!-- <view>GPS</view> -->
    <view>热门</view>
    <view wx:for="{{searchLetter}}" wx:key="index" data-letter="{{item.name}}">{{item.name}}</view>
  </view>
</view>
<scroll-view scroll-y="true" style="height:{{winHeight}}px" scroll-into-view="{{showLetter}}">
  <view class="selection" wx:for="{{cityList}}" wx:key="{{item.initial}}"  id="{{item.initial}}">
   <block wx:if="{{index===0}}" >
				<!-- <block wx:if="{{cityArr.length}}" >
					<view style="margin-left: 15px">
						<text class="hor" >历史访问</text>
						<view bindtap = "wxSortPickerViewItemTap">
							<block wx:for="{{cityArr}}" wx:key="{{item.id}}" wx:for-item="cityName">
								<view class="kuai" data-text="{{cityName}}">{{cityName}}</view>
							</block>
						</view>
					</view>
				</block> -->

				<view class="hot">
					<text class="hor">国内热门城市</text>
					<view bindtap = "wxSortPickerViewItemTap">
            <view class="kuai" wx:for-items="{{hotcityList}}" wx:key="{{index}}" data-cityCode="{{item.cityCode}}" data-text="{{item.city}}">{{item.city}}</view>
          </view>
        </view>
      </block>
      <view class="item_letter">{{item.initial}}</view>
      <view bindtap = "wxSortPickerViewItemTap">
        <view class="item_city" wx:for="{{item.cityInfo}}" wx:for-item="ct" wx:key="{{ct.id}}" wx:for-index="idx"  data-text="{{ct.city}}">
         {{ct.city}}
       </view>
     </view>
   </view>
 </scroll-view>
</template>

<script>
  import wepy from 'wepy'
  import city from '@/utils/city.js' // 获取应用实例

  export default class citySelect extends wepy.page {
    config = {
      navigationBarTitleText: '城市选择'
    }

    components = {}

    data = {
      inputVal: '',
      searchLetter: [],
      showLetter: "",
      winHeight: 0,
      tHeight: 0,
      bHeight: 0,
      startPageY: 0,
      cityList: [],
      isShowLetter: false,
      scrollTop: 0,
      city: "",
      cityArr: [],
      src: './dw.png',
      hotcityList: [{ cityCode: 110000, city: '北京' }, { cityCode: 310000, city: '上海' }, { cityCode: 440100, city: '广州' }, { cityCode: 440300, city: '深圳' }, { cityCode: 330100, city: '杭州' }, { cityCode: 320100, city: '南京' }, { cityCode: 420100, city: '武汉' }, { cityCode: 410100, city: '郑州' }, { cityCode: 120000, city: '天津' }, { cityCode: 610100, city: '西安' }, { cityCode: 510100, city: '成都' }, { cityCode: 500000, city: '重庆' }],
      searchRes: []
    }

    computed = {}

    setScrollTop(that, showLetter) {
      let scrollTop = 0
      let cityList = that.cityList
      let cityCount = 0
      let initialCount = 0
      for (let i = 0; i < cityList.length; i++) {
        if (showLetter == cityList[i].initial) {
          scrollTop = initialCount * 30 + cityCount * 41
          break
        } else {
          initialCount++
          cityCount += cityList[i].cityInfo.length
        }
      }
      this.scrollTop = this.scrollTop - 1558
    }
    nowLetter(pageY, that) { //当前选中的信息
      let letterData = this.searchLetter
      let bHeight = 0
      let tHeight = 0
      let showLetter = ""
      for (let i = 0; i < letterData.length; i++) {
        if (letterData[i].tHeight <= pageY && pageY <= letterData[i].bHeight) {
          bHeight = letterData[i].bHeight
          tHeight = letterData[i].tHeight
          showLetter = letterData[i].name
          break
        }
      }

      this.setScrollTop(that, showLetter)

      this.bHeight = bHeight
      this.tHeight = tHeight
      this.showLetter = showLetter
      this.startPageY = pageY
    }

    //经纬度定位获取站点 地址逆解析
    ajaxGes(lat, lng) {
      //自己的定位接口
      let url = 'http://apis.map.qq.com/ws/geocoder/v1/?location=' + lat + ',' + lng + '&key=KQCBZ-XDOC3-K6G3I-YE7V7-UKHR5-7AB4O';

      wepy.request({
        url: url,
        success(res) {
          return res.data
        },
        fail(err) {
          return err
        }
      })
    }

    search(str) {
      console.log('search')
      this.searchRes = this.hotcityList
      // App.HttpService.search({
      //   keyword: str
      // })
      // .then(res => {
      //   const data = res.data
      //   console.log(data)
      //   if (data.meta.code == 0) {
      //     this.searchRes = data.data
      //   }
      // })
    }

    redirectTo(e) {
      console.log(e)
      this.$redirect({url:'./index'})// 相对路径跳转
    }

    methods = {
      clearInput() {
        this.inputVal = ''
      },
      inputTyping(e) {
        console.log(e)
        console.log(e.detail.value.replace(/(^\s*)|(\s*$)/g, ''))
        if(e.detail.value.replace(/(^\s*)|(\s*$)/g, '') != ''){
          this.inputVal = e.detail.value.replace(/(^\s*)|(\s*$)/g, '')
          this.search(this.inputVal)
        }
      },
      searchStart(e) {
        let showLetter = e.target.dataset.letter
        let pageY = e.touches[0].pageY
        console.log('start=='+showLetter+'==='+pageY)
        if (showLetter) {
          this.isShowLetter = true
        } else {
          this.isShowLetter = false
          showLetter = 'A'
        }
        this.setScrollTop(this, showLetter)
        this.nowLetter(pageY, this)
        this.startPageY = pageY
        this.showLetter = showLetter
      },
      searchMove(e) {
        let pageY = e.touches[0].pageY
        let startPageY = this.startPageY
        let tHeight = this.tHeight
        let bHeight = this.bHeight
        let showLetter = 0
        console.log(pageY)
        if (startPageY - pageY > 0) { //向上移动
          if (pageY < tHeight) {
            // showLetter=this.mateLetter(pageY,this);
            this.nowLetter(pageY, this)
          }
        } else { //向下移动
          if (pageY > bHeight) {
            // showLetter=this.mateLetter(pageY,this);
            this.nowLetter(pageY, this)
          }
        }
      },
      searchEnd(e) {
        console.log(e)
        console.log('end')
        this.isShowLetter = false
      },
      bindScroll(e) {
        console.log(e.detail)
      },
      bindCity(e) {
        let city = e.target.dataset.city
        this.city = city
      },
      wxSortPickerViewItemTap(e) {
        console.log(e)
        let city = e.target.dataset.text
        this.city = city
        //可以跳转了
        console.log('选择了城市：', city)
        this.redirectTo(this.city)
      },
      cxgps(e) {
        wx.getLocation({
          type: 'wgs84',
          success(res) {
            let latitude = res.latitude;
            let longitude = res.longitude;
            //经纬度定位获取站点
            //自己的定位接口
            let url = 'http://apis.map.qq.com/ws/geocoder/v1/?location=' + latitude + ',' + longitude + '&key=KQCBZ-XDOC3-K6G3I-YE7V7-UKHR5-7AB4O';

            wepy.request({
              url: url,
              success(data) {
                console.log(data.data)
                if (data.status === 0) {
                  this.city = data.result.address_component.city
                } else {
                  this.city = '定位失败'
                }
              },
              fail(data) {
                this.city = '定位失败'
              }
            })
          },
          fail(res) {
            this.city = '定位失败'
          }
        })
      }
    }

    onLoad() {
      //历史选择，应该在缓存中记录，或者在在app中全局记录
      //当前城市通过之前的页面穿过来或者调用定位
      let c = '北京'
      let cityArr = ['上海', '北京']
      this.cityArr = cityArr
      this.city = c
      // 生命周期函数--监听页面加载
      let searchLetter = city.searchLetter
      // let searchLetter = ['搜索','定位','热门'].concat(city.searchLetter)
      let cityList = city.cityList()

      let sysInfo = wx.getSystemInfoSync()
      console.log(sysInfo)
      let winHeight = sysInfo.windowHeight

      //添加要匹配的字母范围值
      //1、更加屏幕高度设置子元素的高度
      let itemH = (winHeight - 50) / searchLetter.length
      let tempObj = []
      for (let i = 0; i < searchLetter.length; i++) {
        let temp = {}
        temp.name = searchLetter[i]
        temp.tHeight = i * itemH
        temp.bHeight = (i + 1) * itemH

        tempObj.push(temp)
      }

      this.winHeight = winHeight
      this.itemH = itemH
      this.searchLetter = tempObj
      this.cityList = cityList

    }
  }
</script>
